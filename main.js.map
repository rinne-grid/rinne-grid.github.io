{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/hatena-bookmark.service.ts","webpack:///./src/app/progress.interceptor.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"html {\\r\\n    height: 100%;\\r\\n}\\r\\nbody {\\r\\n    font-family: Roboto,\\\"Helvetica Neue Light\\\",\\\"Helvetica Neue\\\",Helvetica,Arial,\\\"Lucida Grande\\\",sans-serif;\\r\\n    border-bottom: 1px solid rgba(0,0,0,.12);\\r\\n    height: 100%;\\r\\n}\\r\\nh3 {\\r\\n    font-weight: 300;\\r\\n    font-size: 24px;\\r\\n    line-height: 32px;\\r\\n    margin: 40px 0 20px;\\r\\n    padding-bottom: 3px;\\r\\n}\\r\\n.mat-drawer-content {\\r\\n    background-color: #fff;\\r\\n    overflow: hidden;\\r\\n}\\r\\n.mat-expansion-panel-header-description {\\r\\n    flex-grow: 0;\\r\\n    text-align: left;\\r\\n}\\r\\n.mat-expansion-panel-header-title {\\r\\n    flex-grow: 0;\\r\\n}\\r\\n/* .my-navbar {\\r\\n    background: #3f51b5;\\r\\n    display: flex;\\r\\n    color: #fff;\\r\\n    padding: 8px 16px;\\r\\n} */\\r\\n.nav-bar {\\r\\n    box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\\r\\n    position:fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    z-index: 2;\\r\\n}\\r\\n.bookmark-header {\\r\\n    width: 100%;\\r\\n    margin-top: 64px;\\r\\n    height: 90px;\\r\\n\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    font-size: 0.8rem;\\r\\n}\\r\\n.bookmark-section {\\r\\n    margin-top: 30px;\\r\\n    padding-left: 20px;\\r\\n}\\r\\n/* @media screen and (min-width: 499px) {\\r\\n    .bookmark-header {\\r\\n        margin-top: 56px;\\r\\n    }\\r\\n} */\\r\\n.bookmark-header a {\\r\\n    color: #ccc;\\r\\n}\\r\\n.bookmark-target-url {\\r\\n    margin-top: 30px;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n.bookmark-target-url-input-full {\\r\\n    min-width: 100px;\\r\\n    max-width: 850px;\\r\\n    width: 100%;\\r\\n\\r\\n}\\r\\n@media screen and (max-width: 600px) {\\r\\n    .bookmark-target-url-input-full {\\r\\n        min-width: 50px;\\r\\n        max-width: 300px;\\r\\n        width: 100%;\\r\\n        font-size: 0.6em;\\r\\n    }\\r\\n}\\r\\n.get-bookmark-button {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n.bookmark-loading-spinner {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n.bookmark-user-notify {\\r\\n    text-decoration:underline; \\r\\n    font-weight: bold; \\r\\n    font-size: 0.6rem;\\r\\n    background-color: rgb(255,203,203); \\r\\n    color: rgb(255, 8, 8);\\r\\n    height: 16px;\\r\\n}\\r\\n.mat-expansion-panel-header-description .bookmark-user-notify {\\r\\n    margin-top: 4px;\\r\\n}\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"nav-bar\\\">\\n  <a mat-button [matMenuTriggerFor]=\\\"menu\\\">\\n    <span class=\\\"mat-button-wrapper\\\">JSONP Test</span>\\n  </a>\\n  <mat-menu #menu=\\\"matMenu\\\">\\n    <button mat-menu-item>Settings</button>\\n    <button mat-menu-item>Help</button>\\n  </mat-menu>\\n</mat-toolbar>\\n<mat-sidenav-container>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\" class=\\\"bookmark-header\\\">\\n      <a href=\\\"http://developer.hatena.ne.jp/ja/documents/bookmark/apis/getinfo\\\" target=\\\"_blank\\\">はてなブックマークエントリー情報取得API</a>を使って、対象URLのブックマーク情報を取得します。\\n    </mat-toolbar>\\n\\n    <form class=\\\"bookmark-target-url\\\">\\n      <mat-form-field class=\\\"bookmark-target-url-input-full\\\">\\n        <mat-label>URLを入力\\n        </mat-label>\\n        <input matInput name=\\\"targetUrl\\\" [(ngModel)]=\\\"targetUrl\\\">\\n      </mat-form-field>\\n\\n\\n    </form>\\n    <div class=\\\"get-bookmark-button\\\">\\n      <button mat-raised-button name=\\\"getBookmarks\\\" color=\\\"primary\\\" (click)=\\\"getBookmark()\\\">取得</button>\\n    </div>\\n    <div class=\\\"bookmark-loading-spinner\\\">\\n      <mat-progress-spinner [mode]=\\\"spinnerMode\\\" *ngIf=\\\"loading\\\">\\n      </mat-progress-spinner>\\n    </div>\\n\\n    <div *ngIf=\\\"targetEntry\\\">\\n        <a href=\\\"{{targetEntry.url}}\\\" target=\\\"_blank\\\">{{targetEntry.title}}</a> - <span class=\\\"bookmark-user-notify\\\">{{targetEntry.count}} USERS</span>\\n      <mat-toolbar class=\\\"bookmark-section\\\">\\n        <span>ブックマークエントリー</span>\\n      </mat-toolbar>\\n      \\n\\n      <mat-accordion>\\n        <mat-expansion-panel *ngFor=\\\"let bookmark of targetEntry.bookmarks\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              {{bookmark.timestamp}}\\n            </mat-panel-title>\\n            <mat-panel-description>\\n              {{bookmark.user}} - ブコメ：{{bookmark.comment}}\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n          登録タグ：\\n          <div *ngFor=\\\"let tag of bookmark.tags\\\">\\n            {{tag}}\\n          </div>\\n        </mat-expansion-panel>\\n      </mat-accordion>\\n      <br>\\n      <mat-toolbar class=\\\"bookmark-section\\\">\\n        <span>関連記事</span>\\n      </mat-toolbar>\\n      <mat-accordion>\\n        <mat-expansion-panel *ngFor=\\\"let relate of targetEntry.related\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              {{relate.title}}\\n            </mat-panel-title>\\n            <mat-panel-description>\\n                <span class=\\\"bookmark-user-notify\\\">{{relate.count}} USERS</span>\\n            </mat-panel-description>\\n          </mat-expansion-panel-header>\\n\\n          <a href=\\\"{{relate.entry_url}}\\\" target=\\\"_blank\\\">{{relate.title}}</a>\\n          \\n        </mat-expansion-panel>\\n      </mat-accordion>\\n    </div>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","import { Component } from '@angular/core';\nimport { HatenaBookmarkService } from './hatena-bookmark.service';\n\nimport { EntryInfo } from './EntryInfo';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  targetUrl = 'https://github.com/rinne-grid/tkoolmv_plugin_RecollectionMode'\n  \n  targetEntry: EntryInfo = null;\n  loading: boolean = false;\n  spinnerMode: string = \"indeterminate\";\n\n  constructor(private hatenaService: HatenaBookmarkService){}\n  getBookmark() {\n    this.loading = true;\n    console.log(this.targetUrl);\n    this.hatenaService.getBookmarks(this.targetUrl).subscribe(\n      (entries) => {\n        this.targetEntry = entries;\n        this.loading = false;\n        console.log(entries);\n      }\n    );\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HttpClientJsonpModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { \n  MatInputModule, \n  MatButtonModule,\n  MatCheckboxModule,\n  MatMenuModule,\n  MatIconModule,\n  MatGridListModule,\n  MatToolbarModule,\n  MatExpansionModule,\n  MatSidenavModule,\n} from '@angular/material';\n\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { AppComponent } from './app.component';\nimport { HatenaBookmarkService } from './hatena-bookmark.service';\nimport { ProgressInterceptor } from './progress.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    // @angular/core\n    BrowserModule,\n    HttpClientModule,\n    HttpClientJsonpModule,\n    BrowserAnimationsModule,\n    FormsModule,\n\n    // @angular/material\n    MatInputModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatIconModule,\n    MatGridListModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatSidenavModule,\n    MatProgressSpinnerModule,\n  ],\n  providers: [\n    HatenaBookmarkService,\n    {\n      provide: HTTP_INTERCEPTORS, \n      useClass: ProgressInterceptor,\n      multi: true,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { EntryInfo } from './EntryInfo';\r\nimport { ProgressInterceptor } from './progress.interceptor';\r\n\r\n@Injectable()\r\nexport class HatenaBookmarkService {\r\n    constructor(private http: HttpClient){}\r\n\r\n    private apiEndPoint: string = \"https://b.hatena.ne.jp/entry/json/\";\r\n\r\n    getBookmarks(targetUrl:string): Observable<EntryInfo> {\r\n        console.log(targetUrl);\r\n        let httpParams = new HttpParams()\r\n            .set(\"url\", targetUrl);\r\n        \r\n        console.log(`${this.apiEndPoint}?${httpParams.toString()}`)\r\n        return this.http.jsonp<EntryInfo>(`${this.apiEndPoint}?${httpParams.toString()}`, \"callback\");\r\n    }\r\n}\r\n","import { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Injectable } from '@angular/core';\nimport { \n    HttpClient, \n    HttpInterceptor, \n    HttpHandler, \n    HttpRequest, \n    HttpResponse,\n    HttpEvent, \n    HttpEventType \n} from '@angular/common/http';\n\nimport { HatenaBookmarkService } from './hatena-bookmark.service';\n\n@Injectable()\nexport class ProgressInterceptor implements HttpInterceptor {\n    constructor(private hatenaBookmarkService: HatenaBookmarkService) {}\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        console.log(\"interceptor開始\");\n        return next.handle(request).pipe(\n            tap(event => {\n                console.log(\"tap\");\n                if(event instanceof HttpResponse) {\n                    console.log(\"HttpResponse開始\")\n                }\n            })\n\n        )\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}